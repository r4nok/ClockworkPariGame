//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfApplication.ServiceChat {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceChat.IServiceMessenger")]
    public interface IServiceMessenger {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMessenger/GetCompanion", ReplyAction="http://tempuri.org/IServiceMessenger/GetCompanionResponse")]
        int GetCompanion(string nick);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMessenger/GetCompanion", ReplyAction="http://tempuri.org/IServiceMessenger/GetCompanionResponse")]
        System.Threading.Tasks.Task<int> GetCompanionAsync(string nick);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceMessengerChannel : WpfApplication.ServiceChat.IServiceMessenger, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceMessengerClient : System.ServiceModel.ClientBase<WpfApplication.ServiceChat.IServiceMessenger>, WpfApplication.ServiceChat.IServiceMessenger {
        
        public ServiceMessengerClient() {
        }
        
        public ServiceMessengerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceMessengerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceMessengerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceMessengerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int GetCompanion(string nick) {
            return base.Channel.GetCompanion(nick);
        }
        
        public System.Threading.Tasks.Task<int> GetCompanionAsync(string nick) {
            return base.Channel.GetCompanionAsync(nick);
        }
    }
}
